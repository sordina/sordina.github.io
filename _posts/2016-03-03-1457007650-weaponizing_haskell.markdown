---
layout: post
title:  "Weaponizing Haskell - Part One"
categories: blog
reddit: "https://www.reddit.com/r/sordina/comments/48tv4u/weaponizing_haskell_part_one_bows_and_arrows/"
---

<p class="attribution">
	<img src="/images/weaponizing-haskell/weapons.png" class="image fit" />
	<a href="https://www.flickr.com/photos/t4llberg/">T4LLBERG</a> -
	<a href="https://www.flickr.com/photos/t4llberg/5828882565/in/photolist-9T5xHg-Loqjf-3cJaRa-bmKdja-8uAuD2-syAqhe-5qvN7x-ob5puP-6yAWpd-7PmRPP-5d38bT-9Qo1i9-7PqQHd-cFrx7-4RA53L-77hMgc-nnQked-9o3UKG-nnQnJd-4XtovT-4ENJ8v-Lovyk-tbd9T-anAkho-6z9ugq-5ZkTbv-qVd5X6-az16C2-hnMJY-SazWL-6nduuc-4dY9M-8PBY3z-9TaNjW-8rRjEu-d9CZrW-3LhSJp-6NAZmj-2szkfY-8TE4q-9eugnE-6pHWQW-6sckK1-5CCS13-8mWaRB-4a2nnd-8taWhQ-hksGmw-8moN5e-3hgTat">"Weapons"</a>
</p>

This is a set of notes summarizing the trials and tribulations involved in getting a
small Haskell application building, running, and scaling in the cloud on a budget!

The outcome is that the app still isn't running, but we are on the bring of having
it running on AWS through Elastic Beanstalk. Stay tuned for Part-Two, where
I'll speak in more detail about the final step, and guide you down the happy-path
towards building and running your own Haskell services in the cloud...

<!--more-->

## What I Want

### Simple

* Conceptually clear architecture
* Separation of responsibilities by service

### Builds

* Automated builds in the cloud
* For cheap!
* With limited access to my accounts

### Deployments

* Dockerized
* Deployable with multi-container support
* Ideally platform agnostic
* Running on AWS for now

### Scalable

* Expand the capability of the platform
* Grow users
* Grow services
* Grow volume

## Where I am Now

* Pre-Prod
* CI pipeline is working fine
* Still having issues with Elastic Beanstalk
* HALP


### Timeline

* Prototype App
* Dockerized
* Run on Elastic Beanstalk
* Integrated into Slack
* Alpha App
* Database Issues
* Postgrest
* Multi-Containerized (Suits Services Model)
* Build Pipeline
* CI Services Trials
* Docker-Hub BitBucket-Proxy
* Elastic-Beanstalk

## How I Got There

* Docker
* Multi-Stage Containers
* Proxy Version Control Accounts

## Problems I Encountered

* Credential Greed
* Build Times
* Beanstalk Errors

## What's Left

### Production Services

* AWS Beanstalk Deployment
* or AWS ECS
* or AWS EC2 manual deploys

### App Changes Left

* Subscriptions
* Web-Interface
* Email gateway
* Privileged Use-cases

### Ops Changes Left

* HTTPS
* Zero-Downtime Deploys
* Ansible Ops
* VPCs

# Links

* [Slides](http://sordina.presentations.s3.amazonaws.com/mfug_weaponized_haskell_20160303/index.html#/)
* [Melbourne Haskell Meetup](http://www.meetup.com/Melbourne-Haskell-Users-Group/events/228578673/)
* [Melbourne Functional Meetup](http://www.meetup.com/Melbourne-Functional-User-Group-MFUG/events/228116766/)
* [Melbourne Functional Presentation](https://github.com/sordina/mfug_weaponizing_haskell)
* [Docker](https://www.docker.com/)
* [Docker Compose](https://docs.docker.com/compose)
* [Docker Hub](https://hub.docker.com)
* [AWS Elastic Beanstalk](https://aws.amazon.com/documentation/elastic-beanstalk/)
* [AWS ECS](https://aws.amazon.com/ecs/getting-started)
